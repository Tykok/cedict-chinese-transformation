{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Cedict Dictionary GitHub Workflow The Cedict Dictionary was created to use the Chinese dictionary easily. To know more about the Cedict project, go on this page . Table of Contents Table of Contents Contributing Code of Conduct Contributing Guide Contributing Development happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving this Cedict Dictionary. Code of Conduct We adopted a Code of Conduct that we expect Cedict Dictionary participants to adhere to. Please read the full text so that you can understand what actions will and will not be tolerated. Contributing Guide Read our contributing guide to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to our Cedict Dictionary.","title":"Home"},{"location":"#table-of-contents","text":"Table of Contents Contributing Code of Conduct Contributing Guide","title":"Table of Contents"},{"location":"#contributing","text":"Development happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving this Cedict Dictionary.","title":"Contributing"},{"location":"#code-of-conduct","text":"We adopted a Code of Conduct that we expect Cedict Dictionary participants to adhere to. Please read the full text so that you can understand what actions will and will not be tolerated.","title":"Code of Conduct"},{"location":"#contributing-guide","text":"Read our contributing guide to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to our Cedict Dictionary.","title":"Contributing Guide"},{"location":"cedict/","text":"Cedict Dictionary Getting started with the Cedcit Dictionary here. Getting started To start use the Cedict dictionary library you need to install the package with npm or yarn at your root project : npm install @tykok/cedict-dictionary yarn add @tykok/cedict-dictionary Cedict To use the Cedict class, you simply need to import it from @tykok/cedict-dictionary . import Cedict from '@tykok/cedict-dictionary' Next, you can use some function like getByTraditional() for example. With that method you can retrieve a traditional character. For example with : console.log(Cedict.getByTraditional('\u4e0a\u5929\u5165\u5730')) You will get : { traditional: \"\u4e0a\u5929\u5165\u5730\", simplified: \"\u4e0a\u5929\u5165\u5730\", pinyin: \"shang4\", english: \"lit. to go up to heaven or down to Hades (idiom)/fig. to go to great lengths/to search heaven and earth/\" } You have others methods like : getByEnglish() getByPinyin() getBySimplified() All this methods are static, and you can use it directly with the Cedict class. ChineseWord ChineseWord is the type returned by all methods in Cedict class. \u26a0\ufe0f Be care, all this methods can return undefined value too. This class have 4 string properties are : traditional : The traditional chinese character. simplified : The simplified chinese character. pinyin : The representation of the intonation of the word in Chinese. english : Are the traduction of the current chinese word.","title":"Cedict"},{"location":"cedict/#cedict-dictionary","text":"Getting started with the Cedcit Dictionary here.","title":"Cedict Dictionary"},{"location":"cedict/#getting-started","text":"To start use the Cedict dictionary library you need to install the package with npm or yarn at your root project : npm install @tykok/cedict-dictionary yarn add @tykok/cedict-dictionary","title":"Getting started"},{"location":"cedict/#cedict","text":"To use the Cedict class, you simply need to import it from @tykok/cedict-dictionary . import Cedict from '@tykok/cedict-dictionary' Next, you can use some function like getByTraditional() for example. With that method you can retrieve a traditional character. For example with : console.log(Cedict.getByTraditional('\u4e0a\u5929\u5165\u5730')) You will get : { traditional: \"\u4e0a\u5929\u5165\u5730\", simplified: \"\u4e0a\u5929\u5165\u5730\", pinyin: \"shang4\", english: \"lit. to go up to heaven or down to Hades (idiom)/fig. to go to great lengths/to search heaven and earth/\" } You have others methods like : getByEnglish() getByPinyin() getBySimplified() All this methods are static, and you can use it directly with the Cedict class.","title":"Cedict"},{"location":"cedict/#chineseword","text":"ChineseWord is the type returned by all methods in Cedict class. \u26a0\ufe0f Be care, all this methods can return undefined value too. This class have 4 string properties are : traditional : The traditional chinese character. simplified : The simplified chinese character. pinyin : The representation of the intonation of the word in Chinese. english : Are the traduction of the current chinese word.","title":"ChineseWord"}]}